<p>
OS переменные являются "контейнерами", в которые вы можете загружать различную информацию, а позднее извлекать ее обратно.

<p>
Каждая OS переменная должна иметь собственное уникальное имя, которое может начинаться с латинской буквы или 
<nobr>символа <code>_</code> (подчеркивания)</nobr>,
при этом в самом имени могут использоваться еще цифры, символ <code>@</code> и <code>$</code> (доллар).

<p>
<div class="bs-callout bs-callout-danger">
Имя переменной в OS не может начинаться с цифр, символа <code>@</code> и <code>$</code>.
</div>
</p>

<p>
<div class="bs-callout bs-callout-danger">
Так как OS чувствителен к регистру, переменные с одинаковыми именами написанными в разном регистре 
(например <code>user</code> и <code>User</code>), будут являться разными переменными.
</div>
</p>

<h3>Создание локальных переменных</h3>

<p>
Создание локальных переменных в OS происходит с помощью команды <code>var</code>. Локальные переменные доступны
в текущей области видимости, читайте подробнее об этом в разделе 
<a href="<%=@controller.createUrl{params={page="langref.variables.scope"}}%>">Область видимости переменной</a>.

<div class="row">
  <div class="col-md-11 badge-src">
<pre class="prettyprint linenums lang-js">
//Создаем переменную с именем ex1
var ex1;
//Создаем переменную с именем ex2
var ex2;
</pre>
  </div>
</div>

<p>
Созданные выше переменные будут пустыми т.е. мы создали переменные, но не загрузили в них никакие значения.

<p>
<div class="bs-callout bs-callout-danger">
Переменные с пустыми значениями содержат <code>null</code>.
</div>
</p>

<p>
Чтобы проверить переменную на пустое значение, в OS мы используем оператор <code>===</code> или <code>!==</code>

<p>
Загрузка значений в переменные в OS выполняется с помощью оператора <code>=</code>. Значения могут загружаться в переменные 
прямо в момент создания. В случаях когда в одной строке объявляются и инициализируются несколько переменных, используется
один оператор <code>=</code> с перечислением через запятую значений, каждое из которых присвоится соответствующей переменной.

<%@controller.widget('SourceWidget', {source="examples/tutorial.variables.basics.osh"})%>

<h3>Создание глобальных переменных</h3>

<p>
В OS cоздание глобальных переменных осуществляется без использования команды <code>var</code>. Такие переменные доступны 
из любой точки программы. Создание функций подчиняется такому же правилу.

<%@controller.widget('SourceWidget', {source="examples/tutorial.variables.global.osh"})%>

<p>
Если быть совсем уж точным, то глобальные переменные создаются в текущем окружении. Доступ к глобальной переменной <code>user</code>
транслируется в <code>_E.user</code>. Обычно текущее окружение идентично глобальному окружению. Подробнее об этом читайте
в разделе <a href="">Окружение функции</a>.