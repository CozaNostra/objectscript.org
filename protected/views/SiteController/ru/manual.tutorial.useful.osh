<p>
Давайте сделаем что-нибудь полезное. К примеру, определим, какой браузер использует тот, кто смотрит в данный момент нашу страницу. 
Для этого мы проверим строку с именем браузера, посылаемую нам в HTTP-запросе. Эта информация хранится в переменной. 
Интересующая нас в данный момент переменная называется <code>_SERVER["HTTP_USER_AGENT"]</code>.

<h3>Вывод браузера 
	<small>рабочий пример <a href="examples/tutorial.useful.osh" target="_blank">examples/tutorial.useful.osh</a></small></h3>

<div class="row">
  <div class="col-md-10 badge-src">
	<span class="badge"><a href="https://github.com/unitpoint/objectscript.org/blob/master/www/examples/tutorial.useful.osh"
		target="_blank"><span class="glyphicon glyphicon-paperclip"></span></a></span>
<pre class="prettyprint linenums"><% @controller.beginWidget("HtmlEncodeWidget") %>
<html>
 <head>
  <title>Show user agent using ObjectScript</title>
 </head>
 <body>
 &lt;% echo _SERVER["HTTP_USER_AGENT"] %&gt; 
 <p>
  Browser:
  &lt;%
    var userAgent = _SERVER["HTTP_USER_AGENT"].lower()
    if(userAgent.find("firefox/")){
      echo "Firefox"
    }else if(userAgent.find("opera/") || userAgent.find("opr/")){
      echo "Opera"
    }else if(userAgent.find("chrome/")){
      echo "Chrome"
    }else if(userAgent.find("safari/")){
      echo "Safari"
    }else if(userAgent.find("iphone/")){
      echo "Iphone"
    }else if(userAgent.find("applewebkit/")){
      echo "AppleWebKit"
    }else if(userAgent.find("msie ")){
      echo "MSIE"
    }else{
      echo "Not detected"
    }
  %&gt;
 </p> </body>
</html><% @controller.endWidget("HtmlEncodeWidget") %>
</pre>
  </div>
</div>

<p>
<div class="bs-callout bs-callout-danger">
<code>_SERVER</code> - специальная зарезервированная переменная OS, которая содержит всю информацию, 
полученную от веб-сервера. Это глобальная переменная, поэтому ее можно использовать в любом месте программы. 
</div>
</p>

<p>Пример вывода данной программы:
<div class="row">
  <div class="col-md-10">
<pre>
Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.22 Chrome/25.0.1364.172

Browser: Chrome
</pre>
  </div>
</div>

<p>
Здесь мы познакомились с несколькими новыми элементами. Во-первых, здесь есть конструкция <code>if</code>. Если вы знакомы 
с основами синтаксиса языка <code>C++</code>, то вы уже заметили схожие моменты. Кроме этого, здесь присутствует вызовы функций 
<code>lower</code> и <code>find</code>. <code>lower</code> возвращает строку в нижнем регистре. <code>find</code> ищет одну 
строку в другой. Если она находит вхождение, то возвращает позицию (индекс начинается с нуля), иначе возвращает <code>null</code>. 

<p>
<div class="bs-callout bs-callout-danger">
<code>lower</code> и <code>find</code> - встроенные в OS функции, они реализованны в классе <code>String</code>.
</div>
</p>

<p>
<div class="bs-callout bs-callout-danger">
В OS преобразование к булевому типу происходит следующим образом: <code>null</code> и <code>false</code> возвращают <i>ложь</i>, 
все другие значения возвращают <i>истину</i>, включая число <code>0</code> и пустую строку <code>""</code>.
</div>
</p>

<p>
С помощью нескольких вызовов <code>find</code> и конструкции <code>if</code> мы определяем, какой браузер использует 
пользователь, который смотрит нашу страницу. В выше приведенном примере мы распознали, что пользователь использует браузер <i>Chrome</i>.